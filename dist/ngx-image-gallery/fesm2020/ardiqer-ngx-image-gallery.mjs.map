{"version":3,"file":"ardiqer-ngx-image-gallery.mjs","sources":["../../../src/projects/ngx-image-gallery/src/lib/directives/mousewheel.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/components/ngx-image-gallery/ngx-image-gallery.component.html","../../../src/projects/ngx-image-gallery/src/lib/components/ngx-image-gallery/ngx-image-gallery.component.ts","../../../src/projects/ngx-image-gallery/src/lib/directives/click-outside.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/index.ts","../../../src/projects/ngx-image-gallery/src/public-api.ts","../../../src/projects/ngx-image-gallery/src/ardiqer-ngx-image-gallery.ts"],"sourcesContent":["import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\r\n\r\n@Directive({ selector: '[mouseWheel]' })\r\nexport class MouseWheelDirective {\r\n  @Output() mouseWheelUp = new EventEmitter();\r\n  @Output() mouseWheelDown = new EventEmitter();\r\n\r\n  @HostListener('mousewheel', ['$event']) onMouseWheelChrome(event: any) {\r\n    this.mouseWheelFunc(event);\r\n  }\r\n\r\n  @HostListener('DOMMouseScroll', ['$event']) onMouseWheelFirefox(event: any) {\r\n    this.mouseWheelFunc(event);\r\n  }\r\n\r\n  @HostListener('onmousewheel', ['$event']) onMouseWheelIE(event: any) {\r\n    this.mouseWheelFunc(event);\r\n  }\r\n\r\n  mouseWheelFunc(event: any) {\r\n    var event = window.event || event; // old IE support\r\n    var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\r\n    if(delta > 0) {\r\n        this.mouseWheelUp.emit(event);\r\n    } else if(delta < 0) {\r\n        this.mouseWheelDown.emit(event);\r\n    }\r\n    // for IE\r\n    event.returnValue = false;\r\n    // for Chrome and Firefox\r\n    if(event.preventDefault) {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n}","<!-- images and image information container -->\r\n<div class=\"galleria\" mouseWheel (mouseWheelDown)=\"mouseWheelDown()\" (mouseWheelUp)=\"mouseWheelUp()\"\r\n     (contextmenu)=\"rightClickOnImage($event)\">\r\n    <!-- images -->\r\n    <div class=\"images-container\" (swiperight)=\"prev()\" (swipeleft)=\"next()\">\r\n        <!-- images array -->\r\n        <div class=\"image\" *ngFor=\"let image of images; let i = index;\"\r\n             [class.active]=\"!loading && (i == activeImageIndex)\"\r\n             [ngStyle]=\"{top: conf.imageOffset, bottom: conf.imageOffset}\">\r\n            <img *ngIf=\"i == activeImageIndex\" [src]=\"sanitizer.bypassSecurityTrustUrl(image.url)\" [alt]=\"image.altText || ''\"\r\n                 [style.cursor]=\"conf.imagePointer?  'pointer':'default'\"\r\n                 [style.borderRadius]=\"conf.imageBorderRadius\" (click)=\"clickOnImage(activeImageIndex)\"/>\r\n        </div>\r\n\r\n        <!-- loading animation -->\r\n        <div class=\"loading-animation\" *ngIf=\"(images.length == 0) || loading\">\r\n            <svg  version=\"1.1\" id=\"L3\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 0 0\" xml:space=\"preserve\">\r\n        <circle fill=\"none\" stroke=\"#fff\" stroke-width=\"4\" cx=\"50\" cy=\"50\" r=\"44\" style=\"opacity:0.5;\"/>\r\n        <circle fill=\"#4caf50\" stroke=\"#eee\" stroke-width=\"3\" cx=\"8\" cy=\"54\" r=\"6\">\r\n          <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"2s\"\r\n          type=\"rotate\"\r\n          from=\"0 50 48\"\r\n          to=\"360 50 52\"\r\n          repeatCount=\"indefinite\" />\r\n\r\n          <animate \r\n          attributeName=\"fill\" \r\n          begin=\"1s\" \r\n          dur=\"16s\" \r\n          values=\"#4caf50; #cddc39; #ff9800; #f44336; #e91e63; #ff5722; #ffeb3b; #4caf50\"\r\n          repeatCount=\"indefinite\" /> \r\n        </circle>\r\n      </svg>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- info and thumbnails -->\r\n    <div class=\"info-container\">\r\n        <div class=\"title\"\r\n             *ngIf=\"conf.showImageTitle && !loading && activeImage && activeImage.title\"\r\n             [style.paddingBottom]=\"conf.showThumbnails ? '0px' : '30px'\"\r\n             [class.dark]=\"conf.inline\"\r\n        >{{ activeImage.title }}\r\n        </div>\r\n\r\n        <div #thumbnails class=\"thumbnails\" *ngIf=\"conf.showThumbnails\">\r\n            <div class=\"thumbnails-scroller\" [style.marginLeft]=\"thumbnailsScrollerLeftMargin\">\r\n                <div class=\"thumbnail\"\r\n                     *ngFor=\"let image of images; let i = index;\"\r\n                     [class.active]=\"i == activeImageIndex\"\r\n\r\n                     [style.backgroundImage]=\"sanitizer.bypassSecurityTrustStyle('url(' + (image.thumbnailUrl || image.url) + ')')\"\r\n\r\n                     [style.margin]=\"thumbnailMargin\"\r\n                     [style.width]=\"conf.thumbnailSize + 'px'\"\r\n                     [style.height]=\"conf.thumbnailSize + 'px'\"\r\n                     (click)=\"setActiveImage(i)\">\r\n                    <div class=\"feedback\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- gallery controls -->\r\n<div class=\"control arrow left\" *ngIf=\"conf.showArrows && (images.length > 1) && !loading\" [class.dark]=\"conf.inline\"\r\n     [class.disabled]=\"onFirstImage\" (click)=\"prev()\"></div>\r\n<div class=\"control arrow right\" *ngIf=\"conf.showArrows && (images.length > 1) && !loading\" [class.dark]=\"conf.inline\"\r\n     [class.disabled]=\"onLastImage\" (click)=\"next()\"></div>\r\n\r\n<div class=\"control right-top\">\r\n    <a class=\"ext-url\" [class.dark]=\"conf.inline\"\r\n       *ngIf=\"conf.showExtUrlControl && activeImage && activeImage.extUrl && !loading\" [href]=\"activeImage.extUrl\"\r\n       [target]=\"activeImage.extUrlTarget || '_blank'\">\r\n        <div class=\"feedback\"></div>\r\n    </a>\r\n    <div class=\"close\" [class.dark]=\"conf.inline\" *ngIf=\"conf.showCloseControl\" (click)=\"close()\">\r\n        <div class=\"feedback\"></div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"control left-top\">\r\n    <div class=\"delete-img\" [class.dark]=\"conf.inline\" *ngIf=\"conf.showDeleteControl && !loading\"\r\n         (click)=\"deleteImage(activeImageIndex)\">\r\n        <div class=\"feedback\"></div>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    HostBinding,\r\n    Input,\r\n    HostListener,\r\n    ElementRef,\r\n    Renderer2,\r\n    EventEmitter,\r\n    Output,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport {assign, debounce} from 'lodash';\r\n\r\nimport {GALLERY_CONF, GALLERY_IMAGE} from '../../ngx-image-gallery.conf';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n// key codes to react\r\nconst KEY_CODES = {\r\n    37: 'LEFT',\r\n    39: 'RIGHT',\r\n    27: 'ESC'\r\n};\r\n\r\n// default gallery configuration\r\nconst DEFAULT_CONF: GALLERY_CONF = {\r\n    imageBorderRadius: '3px',\r\n    imageOffset: '20px',\r\n    imagePointer: false,\r\n    showDeleteControl: false,\r\n    showCloseControl: true,\r\n    showExtUrlControl: true,\r\n    showImageTitle: true,\r\n    showThumbnails: true,\r\n    closeOnEsc: true,\r\n    reactToKeyboard: true,\r\n    reactToMouseWheel: true,\r\n    reactToRightClick: false,\r\n    thumbnailSize: 30,\r\n    backdropColor: 'rgba(13,13,14,0.85)',\r\n    inline: false,\r\n    showArrows: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ngx-image-gallery',\r\n    templateUrl: './ngx-image-gallery.component.html',\r\n    styleUrls: ['./ngx-image-gallery.component.scss']\r\n})\r\nexport class NgxImageGalleryComponent implements OnInit, OnChanges {\r\n\r\n    // gallery opened memory\r\n    @HostBinding('class.active') opened: boolean = false;\r\n\r\n    // gallery configuration\r\n    @Input() conf: GALLERY_CONF = {};\r\n\r\n    // gallery images\r\n    @Input() images: GALLERY_IMAGE[] = [];\r\n\r\n    // event emmiters\r\n    @Output() onOpen = new EventEmitter();\r\n    @Output() onClose = new EventEmitter();\r\n    @Output() onDelete = new EventEmitter();\r\n    @Output() onImageChange = new EventEmitter();\r\n    @Output() onImageClicked = new EventEmitter();\r\n    @Output() onError = new EventEmitter();\r\n\r\n    // thumbnails container\r\n    @ViewChild('thumbnails') thumbnailsElem: ElementRef;\r\n\r\n    /***************************************************/\r\n\r\n    // loading animation memory\r\n    loading: boolean = false;\r\n\r\n    // current active image index\r\n    activeImageIndex: number = null;\r\n\r\n    // thumbnail margin and scroll position\r\n    thumbnailMargin: string = '0px 8px';\r\n    thumbnailsScrollerLeftMargin: string = '0px';\r\n\r\n    // active image\r\n    get activeImage(): GALLERY_IMAGE {\r\n        return this.images[this.activeImageIndex];\r\n    }\r\n\r\n    // if gallery is on : first image\r\n    get onFirstImage(): boolean {\r\n        return this.activeImageIndex == 0;\r\n    }\r\n\r\n    // if gallery is on : last image\r\n    get onLastImage(): boolean {\r\n        return this.activeImageIndex == (this.images.length - 1);\r\n    }\r\n\r\n    // get thumbnails viewport rendering parameters\r\n    get thumbnailsRenderParams(): { thumbnailsInView: number, newThumbnailMargin: number, newThumbnailSize: number, thumbnailsScrollerLeftMargin: any } {\r\n        let thumbnailsContainerWidth = this.thumbnailsElem.nativeElement.offsetWidth;\r\n\r\n        let thumbnailMargin = 16;\r\n        let thumbnailSize = thumbnailMargin + this.conf.thumbnailSize;\r\n        let thumbnailsInView = Math.floor(thumbnailsContainerWidth / thumbnailSize);\r\n        let extraSpaceInThumbnailsContainer = thumbnailsContainerWidth - (thumbnailsInView * thumbnailSize);\r\n        let extraMargin = extraSpaceInThumbnailsContainer / thumbnailsInView;\r\n\r\n        let newThumbnailMargin = thumbnailMargin + extraMargin;\r\n        let newThumbnailSize = newThumbnailMargin + this.conf.thumbnailSize;\r\n\r\n        let relativePositionOfActiveImageThumbnailToScroller = thumbnailsInView - (thumbnailsInView - this.activeImageIndex);\r\n        let thumbnailsScrollerLeftMargin: any;\r\n\r\n        if (relativePositionOfActiveImageThumbnailToScroller > thumbnailsInView - 2) {\r\n            var outThumbnails = ((this.activeImageIndex + 1) - thumbnailsInView) + 1;\r\n\r\n            if (this.activeImageIndex != (this.images.length - 1)) {\r\n                thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * outThumbnails) + 'px';\r\n            }\r\n            else {\r\n                thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * (outThumbnails - 1)) + 'px';\r\n            }\r\n        } else {\r\n            thumbnailsScrollerLeftMargin = '0px';\r\n        }\r\n\r\n        return {\r\n            thumbnailsInView,\r\n            newThumbnailMargin,\r\n            newThumbnailSize,\r\n            thumbnailsScrollerLeftMargin\r\n        };\r\n    }\r\n\r\n    // set gallery configuration\r\n    private setGalleryConf(conf: GALLERY_CONF) {\r\n        this.conf = assign(DEFAULT_CONF, conf);\r\n    }\r\n\r\n    // load image and return promise\r\n    private loadImage(index: number): Promise<any> {\r\n        const galleryImage: GALLERY_IMAGE = this.images[index];\r\n\r\n        // check if image is cached\r\n        if (galleryImage._cached) {\r\n            return Promise.resolve(index);\r\n        }\r\n        else {\r\n            return new Promise((resolve, reject) => {\r\n                this.loading = true;\r\n\r\n                let image = new Image();\r\n                image.src = galleryImage.url;\r\n\r\n                image.onload = () => {\r\n                    this.loading = false;\r\n                    galleryImage._cached = true;\r\n                    resolve(index);\r\n                };\r\n\r\n                image.onerror = (error) => {\r\n                    this.loading = false;\r\n                    reject(error);\r\n                };\r\n            });\r\n        }\r\n    }\r\n\r\n    // activate image (set active image)\r\n    private activateImage(imageIndex: number) {\r\n        // prevent loading if already loading\r\n        if (this.loading) return false;\r\n\r\n        // emit event\r\n        this.onImageChange.emit(imageIndex);\r\n\r\n        this.loadImage(imageIndex)\r\n            .then(_imageIndex => {\r\n                this.activeImageIndex = _imageIndex;\r\n                // Trigger change detection manually to support ChangeDetectionStrategy.OnPush\r\n                this.cdRef.detectChanges();\r\n\r\n                // scroll thumbnails\r\n                setTimeout(() => {\r\n                    this.fitThumbnails();\r\n                    setTimeout(() => this.scrollThumbnails(), 300);\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.warn(error)\r\n                this.onError.next(error);\r\n            });\r\n    }\r\n\r\n    // adjust thumbnail margin to perfectly fit viewport\r\n    private fitThumbnails = debounce(() => {\r\n        // if thumbnails not visible, return false\r\n        if (this.conf.showThumbnails == false) return false;\r\n\r\n        let thumbnailParams = this.thumbnailsRenderParams;\r\n        this.thumbnailMargin = '0 ' + (thumbnailParams.newThumbnailMargin / 2) + 'px';\r\n    }, 300);\r\n\r\n    // scroll thumbnails to perfectly position active image thumbnail in viewport\r\n    private scrollThumbnails() {\r\n        // if thumbnails not visible, return false\r\n        if (this.conf.showThumbnails == false) return false;\r\n\r\n        let thumbnailParams = this.thumbnailsRenderParams;\r\n        this.thumbnailsScrollerLeftMargin = thumbnailParams.thumbnailsScrollerLeftMargin;\r\n    }\r\n\r\n    // debounced prev\r\n    private debouncedPrev = debounce(() => this.prev(), 100, {'leading': true, 'trailing': false});\r\n\r\n    // debounced next\r\n    private debouncedNext = debounce(() => this.next(), 100, {'leading': true, 'trailing': false});\r\n\r\n    /***************************************************/\r\n\r\n    constructor(\r\n        public sanitizer: DomSanitizer,\r\n        private galleryElem: ElementRef,\r\n        private renderer: Renderer2,\r\n        private cdRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        // create final gallery configuration\r\n        this.setGalleryConf(this.conf);\r\n\r\n        // apply backdrop color\r\n        this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\r\n\r\n        // gallery inline class and auto open\r\n        if (this.conf.inline) {\r\n            this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\r\n            this.open(0);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // when gallery configuration changes\r\n        if (changes.conf && changes.conf.firstChange == false) {\r\n            this.setGalleryConf(changes.conf.currentValue);\r\n\r\n            // apply backdrop color\r\n            this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\r\n\r\n            // gallery inline class and auto open\r\n            if ((changes.conf.previousValue.inline != true) && this.conf.inline) {\r\n                this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\r\n                this.open(0);\r\n            }\r\n        }\r\n\r\n        // when gallery images changes\r\n        if (changes.images && changes.images.firstChange == false) {\r\n            this.images = changes.images.currentValue;\r\n\r\n            if (this.images.length) {\r\n                this.activateImage(0);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // keyboard event\r\n    @HostListener('window:keydown', ['$event'])\r\n    public onKeyboardInput(event: KeyboardEvent) {\r\n        if (this.conf.reactToKeyboard && this.opened && !this.loading) {\r\n            if (KEY_CODES[event.keyCode] == 'RIGHT') {\r\n                this.next();\r\n            }\r\n            else if (KEY_CODES[event.keyCode] == 'LEFT') {\r\n                this.prev();\r\n            }\r\n            else if ((KEY_CODES[event.keyCode] == 'ESC') && this.conf.closeOnEsc) {\r\n                this.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    // window resize event\r\n    @HostListener('window:resize', ['$event'])\r\n    public onWindowResize(event: Event) {\r\n        if (this.opened && !this.loading) {\r\n            this.fitThumbnails();\r\n            setTimeout(() => this.scrollThumbnails(), 300);\r\n        }\r\n    }\r\n\r\n    /***************************************************/\r\n\r\n    // open gallery\r\n    open(index: number = 0) {\r\n        if (this.images.length) {\r\n            this.opened = true;\r\n\r\n            // emit event\r\n            this.onOpen.emit(index);\r\n\r\n            // activate image at given index\r\n            this.activateImage(index);\r\n        }\r\n        else {\r\n            console.warn('No images provided to ngx-image-gallery!');\r\n        }\r\n    }\r\n\r\n    // close gallery\r\n    close() {\r\n        this.opened = false;\r\n        this.activeImageIndex = 0;\r\n\r\n        // emit event\r\n        this.onClose.emit();\r\n    }\r\n\r\n    // change prev image\r\n    prev() {\r\n        if (this.onFirstImage == false) {\r\n            this.activateImage(this.activeImageIndex - 1);\r\n        }\r\n    }\r\n\r\n    // change next image\r\n    next() {\r\n        if (this.onLastImage == false) {\r\n            this.activateImage(this.activeImageIndex + 1);\r\n        }\r\n    }\r\n\r\n    // set image (activate)\r\n    setActiveImage(index: number) {\r\n        this.activateImage(index);\r\n    }\r\n\r\n    // delete image\r\n    deleteImage(index: number) {\r\n        this.onDelete.emit(index);\r\n    }\r\n\r\n    // mouse wheel up (prev image)\r\n    mouseWheelUp() {\r\n        if (this.conf.reactToMouseWheel) {\r\n            this.debouncedNext();\r\n        }\r\n    }\r\n\r\n    // mouse wheel down (next image)\r\n    mouseWheelDown() {\r\n        if (this.conf.reactToMouseWheel) {\r\n            this.debouncedPrev();\r\n        }\r\n    }\r\n\r\n    // click on image\r\n    clickOnImage(index: number) {\r\n        this.onImageClicked.emit(index);\r\n    }\r\n\r\n    // right click on image\r\n    rightClickOnImage(event: Event) {\r\n        event.stopPropagation();\r\n        return this.conf.reactToRightClick;\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[clickOutside]'\r\n})\r\nexport class ClickOutsideDirective {\r\n  @Output() clickOutside: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private _elementRef: ElementRef) {}\r\n\r\n  @HostListener('document:click', ['$event', '$event.target'])\r\n  public onClick($event, targetElement) {\r\n    const isClickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n    if (!isClickedInside) {\r\n      this.clickOutside.emit($event);\r\n    }\r\n  }\r\n}","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgxImageGalleryComponent} from './components/ngx-image-gallery/ngx-image-gallery.component';\r\nimport {ClickOutsideDirective} from './directives/click-outside.directive';\r\nimport {MouseWheelDirective} from './directives/mousewheel.directive';\r\n\r\nexport * from './components/ngx-image-gallery/ngx-image-gallery.component';\r\nexport * from './directives/click-outside.directive';\r\nexport * from './directives/mousewheel.directive';\r\nexport * from './ngx-image-gallery.conf';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        NgxImageGalleryComponent,\r\n        MouseWheelDirective,\r\n        ClickOutsideDirective\r\n    ],\r\n    exports: [\r\n        NgxImageGalleryComponent,\r\n        MouseWheelDirective,\r\n        ClickOutsideDirective\r\n    ]\r\n})\r\nexport class NgxImageGalleryModule {\r\n}\r\n","/*\r\n * Public API Surface of ngx-image-gallery\r\n */\r\n\r\nexport * from './lib/index';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}